print(length(shuffled[shuffled=="TN"]) / length(shuffled[shuffled=="TN" | shuffled == "FN"]))
return(plotBayes(shuffled[shuffled=="TN" | shuffled == "FN"]))
} else {
print("$$$$$$$$$ INVALID STAT ARGUMENT $$$$ using 'all' $$$$$$$$$$$$")
return(plotBayes(shuffled))
}
}
plotStats(shuffled)
plotBayes <- function(shuffled, color = "test") {
n <- length(shuffled)
#assemble data frame
nx <- ceiling(sqrt(n) * 40 /sqrt(1000)) # length of x-axis (setup so that it's 40 when n = 1000)
ny <- ceiling(n / nx) # length of y-axis
# fill in coordinate vectors
rows <- rep(seq(1:nx), ny)
cols <- numeric()
for (i in seq(1:ny)) {
cols <- c(cols, rep(i,nx))
}
# create data frame, add NA for blank spaces
data <- data.frame(result = c(rep(NA, length(rows) - length(shuffled)), shuffled),
x = rows, y = cols)
# add truth column
data$truth = ifelse(data$result == "FN" | data$result == "TP", T, F)
# add test column
data$test = ifelse(data$result == "FP" | data$result == "TP", "Positive", "Negative")
#plot
if (color == "test") {
ggplot(data, aes(x=x, y=y, colour=test)) + geom_point(aes(shape = result, size=2))
} else if (color == "truth") {
ggplot(data, aes(x=x, y=y, colour=truth)) + geom_point(aes(shape = result, size=2))
} else {
print("$$$$$$$ INVALID COLOR ARGUMENT $$$$ using 'test' $$$$$$$$$$")
ggplot(data, aes(x=x, y=y, colour=test)) + geom_point(aes(shape = result, size=2))
}
}
# Breast Cancer, Silver p. 246
# shuffled = shuffleBayesRates(TP = 0.011,
#              FP = 0.099,
#              TN = 0.887,
#              FN = 0.003,
#              n = 1523)
shuffled = shuffleBayesProbs(x = 0.014,
y = 0.7857143,
z = 0.1004057,
n = 1523)
#shuffled[shuffled=="TP" | shuffled == "FN"]
plotStats <- function(shuffled, stat = "all") {
if (stat == "all") {
plotBayes(shuffled)
} else if (stat == "precision") {
print("PRECISION:")
print(length(shuffled[shuffled=="TP"]) / length(shuffled[shuffled=="TP" | shuffled == "FP"]))
return(plotBayes(shuffled[shuffled=="TP" | shuffled == "FP"]))
} else if (stat == "recall" | stat == "sensitivity") {
print("RECALL/SENSITIVITY:")
print(length(shuffled[shuffled=="TP"]) / length(shuffled[shuffled=="TP" | shuffled == "FN"]))
return(plotBayes(shuffled[shuffled=="TP" | shuffled == "FN"]))
} else if (stat == "specificity") {
print("SPECIFICITY:")
print(length(shuffled[shuffled=="TN"]) / length(shuffled[shuffled=="TN" | shuffled == "FN"]))
return(plotBayes(shuffled[shuffled=="TN" | shuffled == "FN"]))
} else {
print("$$$$$$$$$ INVALID STAT ARGUMENT $$$$ using 'all' $$$$$$$$$$$$")
return(plotBayes(shuffled))
}
}
plotStats(shuffled)
plotStats(shuffled, "specificity")
plotStats(shuffled, "recall")
plotStats(shuffled, "precision")
setwd("~/Documents/DSI/Capstone/DSI-Religion-2017")
library(ggplot2)
library(dplyr)
df <- read.csv('modelOutput/modelStats.csv', stringsAsFactors = F)
View(df)
judgeDF <- group_by(df, judgementMethod)
judgeAcc <- summarise(judgeDF, mean(rfAccuracy), mean(svmAccuracy))
names(judgeAcc) <- c("meth", "rf", "svm")
ggplot(data=judgeAcc, aes(x=meth, y=rf)) + geom_bar(stat="identity", position=position_dodge())
# avgSD for
ggplot(df, aes(x=runID, fill=judgementMethod, y=rfAccuracy)) + geom_bar(stat="identity", position=position_dodge())
# order it
df <- df[order(df$svmAccuracy, decreasing=T), ]
rownames(df) <- NULL
# set factor levels to new order
df <- within(df, judgementMethod <- factor(judgementMethod, levels=judgementMethod))
ggplot(df, aes(x=runID, fill=judgementMethod, y=rfAccuracy)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df, aes(x=runID, fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
str(Df)
str(df)
levels(judgementMethod)
levels(df$judgementMethod)
df <- read.csv('modelOutput/modelStats.csv', stringsAsFactors = F)
levels(df$judgementMethod)
df <- df[order(df$svmAccuracy, decreasing=T), ]
rownames(df) <- NULL
# set factor levels to new order
df <- within(df, judgementMethod <- factor(judgementMethod,
levels=judgementMethod))
levels(df$judgementMethod)
df <- read.csv('modelOutput/modelStats.csv', stringsAsFactors = T)
levels(df$judgementMethod)
df <- df[order(df$svmAccuracy, decreasing=T), ]
rownames(df) <- NULL
# set factor levels to new order
df <- within(df, judgementMethod <- factor(judgementMethod,
levels=judgementMethod))
levels(df$judgementMethod)
df <- read.csv('modelOutput/modelStats.csv', stringsAsFactors = T)
levels(df$judgementMethod)
df <- df[order(df$svmAccuracy, decreasing=T), ]
ggplot(df, aes(x=runID, fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
df <- df[order(df$svmAccuracy, decreasing=T), ]
ggplot(df, aes(x=runID, fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df, aes(, fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
head(df)
rownames(df) <- NULL
head(df)
ggplot(df, aes(x=row.names, fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df, aes(x=row.names(df), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df, aes(x=as.numeric(row.names(df)), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df[is.na(df$nous)], aes(x=as.numeric(row.names(df)), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df[is.na(df$nous),], aes(x=as.numeric(row.names(df)), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df[is.na(df$nous),], aes(x=as.numeric(row.names(df[is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df[!is.na(df$nous),], aes(x=as.numeric(row.names(df[!is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
setwd("~/Documents/DSI/Capstone/DSI-Religion-2017")
library(ggplot2)
library(dplyr)
df <- read.csv('modelOutput/modelStats.csv', stringsAsFactors = T)
View(df)
judgeDF <- group_by(df, judgementMethod)
judgeAcc <- summarise(judgeDF, mean(rfAccuracy), mean(svmAccuracy))
names(judgeAcc) <- c("meth", "rf", "svm")
ggplot(data=judgeAcc, aes(x=meth, y=rf)) + geom_bar(stat="identity", position=position_dodge())
# SVM ACCURACY BY JUDGEMENT METHOD
# order it
df <- df[order(df$svmAccuracy, decreasing=T), ]
rownames(df) <- NULL
# plot it
# with PRONOUN COUNTS
ggplot(df[!is.na(df$nous),], aes(x=as.numeric(row.names(df[!is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df[!is.na(df$nous),], aes(x=as.numeric(row.names(df[!is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + gg_title('SVM -WITH- Pronoun Counts')
ggplot(df[!is.na(df$nous),], aes(x=as.numeric(row.names(df[!is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts')
# without PRONOUN COUNTS
ggplot(df[is.na(df$nous),], aes(x=as.numeric(row.names(df[is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts')
ggplot(df[is.na(df$nous),], aes(x=as.numeric(row.names(df[is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts') + ylim(0,1) + xlab('')
# with PRONOUN COUNTS
ggplot(df[!is.na(df$nous),], aes(x=as.numeric(row.names(df[!is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts') + xlab('')
ggplot(df[is.na(df$nous),], aes(x=as.numeric(row.names(df[is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts') + ylim(0,1) + xlab('')
names(df)
vars <- c("avgEVC","avgSD","elle","il","ils","je","le","nous","vous",
"perNeg","perNegDoc","perPos","perPosDoc",
"pronounCount","pronounFrac","toBeCount","toBeFrac")
ggplot(df[!is.na(df$nous),], aes(x=nous, fill=judgementMethod, y=svmAccuracy)) + geom_point() + ggtitle('') + xlab('')
ggplot(df[!is.na(df$nous),], aes(x=nous, fill=judgementMethod, y=svmAccuracy)) + geom_point() + ggtitle('')
ggplot(df[!is.na(df$nous),], aes(x=nous, colour=judgementMethod, y=svmAccuracy)) + geom_point() + ggtitle('')
ggplot(df[!is.na(df$nous),], aes(x=nous, colour='red', y=svmAccuracy)) + geom_point() + ggtitle('')
vip
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, colour='red', y=svmAccuracy)) + geom_point() + ggtitle('')
vip
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(colour='red') + ggtitle('')
#vip = vip +
vip
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='red')) + ggtitle('')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'blue'))
vip
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='red')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'blue'))
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='red')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'blue'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'green'))
vip = vip + geom_point(aes(x=le, y=svmAccuracy, colour = 'yellow'))
vip = vip + geom_point(aes(x=vous, y=svmAccuracy, colour = 'purple'))
vip
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='red')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'blue'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'green'))
vip = vip + geom_point(aes(x=le, y=svmAccuracy, colour = 'yellow'))
vip = vip + geom_point(aes(x=vous, y=svmAccuracy, colour = 'purple'))
vip
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'green'))
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'green'))
vip = vip + geom_point(aes(x=le, y=svmAccuracy, colour = 'yellow'))
vip = vip + geom_point(aes(x=vous, y=svmAccuracy, colour = 'purple'))
vip
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'je'))
vip = vip + geom_point(aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'je'))
vip = vip + geom_point(aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(aes(x=pronounFrac, y=svmAccuracy, colour = 'judgementFrac'))
vip
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'je'))
vip = vip + geom_point(aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(aes(x=pronounFrac, y=svmAccuracy, colour = 'judgementFrac'))
vip
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'je'))
vip = vip + geom_point(aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'je'))
vip = vip + geom_point(aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip = vip + geom_point(aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(aes(x=elle, y=svmAccuracy, colour = 'elle'))
vip
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'je'))
#vip = vip + geom_point(aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip = vip + geom_point(aes(x=il, y=svmAccuracy, colour = 'il'))
#vip = vip + geom_point(aes(x=elle, y=svmAccuracy, colour = 'elle'))
vip
# with only PRONOUN COUNTS
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'je'))
vip = vip + geom_point(aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip = vip + geom_point(aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(aes(x=elle, y=svmAccuracy, colour = 'elle'))
vip
# with only the notable PRONOUN COUNTS
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
#vip = vip + geom_point(aes(x=je, y=svmAccuracy, colour = 'je'))
#vip = vip + geom_point(aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip = vip + geom_point(aes(x=il, y=svmAccuracy, colour = 'il'))
#vip = vip + geom_point(aes(x=elle, y=svmAccuracy, colour = 'elle'))
vip
# with JUDGEMENTS
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(aes(x=pronounFrac, y=svmAccuracy, colour = 'judgementFrac'))
vip
# with JUDGEMENTS
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip
df <- df[order(df$svmAccuracy, decreasing=T), ]
rownames(df) <- NULL
# plot it
# with PRONOUN COUNTS
ggplot(df[!is.na(df$nous),], aes(x=as.numeric(row.names(df[!is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts') + xlab('')
# without PRONOUN COUNTS
ggplot(df[is.na(df$nous),], aes(x=as.numeric(row.names(df[is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts') + ylim(0,1) + xlab('')
df$didWeCountPronouns <- ifelse(is.na(df$nous), F,T)
View(df)
ggplot(df, aes(x=as.numeric(row.names(df[is.na(df$nous),])), fill=didWeCountPronouns, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITHOUT- Pronoun Counts') + ylim(0,1) + xlab('')
ggplot(df, aes(x=as.numeric(row.names(df)), fill=didWeCountPronouns, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITHOUT- Pronoun Counts') + ylim(0,1) + xlab('')
ggplot(df[!is.na(df$nous),], aes(x=as.numeric(row.names(df[!is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts') + xlab('')
ggplot(data=judgeAcc, aes(x=meth, y=rf)) + geom_bar(stat="identity", position=position_dodge())
ggplot(df, aes(x = targetWordCount, y = svmAccuracy, colour = judgementMethod)) + geom_point()
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod)) + geom_point()
ggplot(df, aes(x = targetWordCount, y = svmAccuracy, colour = judgementMethod)) + geom_point()
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod)) + geom_point()
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod, size = 2)) + geom_point()
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod, size = 1)) + geom_point()
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod, size = 1)) + geom_point()
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod)) + geom_point()
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod, size=2)) + geom_point()
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod)) + geom_point(size=2)
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod)) + geom_point(size=1)
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod)) + geom_point(size=3)
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod)) + geom_point(size=5)
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=je, y=svmAccuracy, colour = 'je'))
vip = vip + geom_point(size=5, aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(size=5, aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=elle, y=svmAccuracy, colour = 'elle'))
vip
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod)) + geom_point(size=5)
# with only the notable PRONOUN COUNTS
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
#vip = vip + geom_point(size=5, aes(x=je, y=svmAccuracy, colour = 'je'))
#vip = vip + geom_point(size=5, aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(size=5, aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
#vip = vip + geom_point(size=5, aes(x=elle, y=svmAccuracy, colour = 'elle'))
vip
# with ALL
df$didWeCountPronouns <- ifelse(is.na(df$nous), F,T)
ggplot(df, aes(x=as.numeric(row.names(df)), fill=didWeCountPronouns, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM - Did We Count Pronouns?') + ylim(0,1) + xlab('')
# with JUDGEMENTS
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip
# with only the notable PRONOUN COUNTS
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
#vip = vip + geom_point(size=5, aes(x=je, y=svmAccuracy, colour = 'je'))
#vip = vip + geom_point(size=5, aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(size=5, aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
#vip = vip + geom_point(size=5, aes(x=elle, y=svmAccuracy, colour = 'elle'))
vip
# with only PRONOUN COUNTS
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=je, y=svmAccuracy, colour = 'je'))
vip = vip + geom_point(size=5, aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(size=5, aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=elle, y=svmAccuracy, colour = 'elle'))
vip
# with ALL
df$didWeCountPronouns <- ifelse(is.na(df$nous), F,T)
ggplot(df, aes(x=as.numeric(row.names(df)), fill=didWeCountPronouns, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM - Did We Count Pronouns?') + ylim(0,1) + xlab('')
# with only the notable PRONOUN COUNTS
vip = ggplot(df[!is.na(df$nous),], aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
#vip = vip + geom_point(size=5, aes(x=je, y=svmAccuracy, colour = 'je'))
#vip = vip + geom_point(size=5, aes(x=le, y=svmAccuracy, colour = 'le'))
vip = vip + geom_point(size=5, aes(x=vous, y=svmAccuracy, colour = 'vous'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
#vip = vip + geom_point(size=5, aes(x=elle, y=svmAccuracy, colour = 'elle'))
vip
# with JUDGEMENTS
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip
names(df)
# with JUDGEMENTS AND PERFORMATIVE
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=avgSD, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=avgEVC, colour = 'avgEVC'))
vip
# with JUDGEMENTS
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip
# with JUDGEMENTS AND PERFORMATIVE
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=avgSD, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=avgEVC, colour = 'avgEVC'))
vip
# with JUDGEMENTS AND PERFORMATIVE
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
# vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
# vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
# vip = vip + geom_point(size=5, aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
# vip = vip + geom_point(size=5, aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=avgSD, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=avgEVC, colour = 'avgEVC'))
vip
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=avgSD, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=avgEVC, colour = 'avgEVC'))
vip
vip = ggplot(df) + geom_point(size=5, aes(x=toBeFrac, y=avgSD, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=avgEVC, colour = 'avgEVC'))
vip
vip = ggplot(df, aes(y=svmAccuracy)) + geom_point(size=5, aes(x=toBeFrac, y=avgSD, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=avgEVC, colour = 'avgEVC'))
vip
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip = vip + geom_point(size=5, aes(x=avgSD, y=svmAccuracy, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=avgEVC, y=svmAccuracy, colour = 'avgEVC'))
vip
vip = ggplot(df, aes(y=svmAccuracy)) + geom_point(size=5, aes(x=avgSD, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=avgEVC, colour = 'avgEVC'))
vip
# with JUDGEMENTS AND PERFORMATIVE
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip = vip + geom_point(size=5, aes(x=avgSD, y=svmAccuracy, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=avgEVC, y=svmAccuracy, colour = 'avgEVC'))
vip
## JUST PERFORMATIVE
vip = ggplot(df, aes(y=svmAccuracy)) + geom_point(size=5, aes(x=avgSD, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=avgEVC, colour = 'avgEVC'))
vip
# with JUDGEMENTS AND PERFORMATIVE
vip = ggplot(df, aes(x=nous, y=svmAccuracy)) + geom_point(size=5, aes(colour='nous')) + ggtitle('') + xlab('variable importance')
vip = vip + geom_point(size=5, aes(x=ils, y=svmAccuracy, colour = 'ils'))
vip = vip + geom_point(size=5, aes(x=il, y=svmAccuracy, colour = 'il'))
vip = vip + geom_point(size=5, aes(x=toBeFrac, y=svmAccuracy, colour = 'toBeFrac'))
vip = vip + geom_point(size=5, aes(x=pronounFrac, y=svmAccuracy, colour = 'pronounFrac'))
vip = vip + geom_point(size=5, aes(x=avgSD, y=svmAccuracy, colour = 'avgSD'))
vip = vip + geom_point(size=5, aes(x=avgEVC, y=svmAccuracy, colour = 'avgEVC'))
vip
ggplot(df, aes(x = targetWordCount, y = svmAccuracy, colour = judgementMethod)) + geom_point(size=5)
ggplot(df, aes(x = binSize, y = svmAccuracy, colour = judgementMethod)) + geom_point(size=5)
ggplot(df, aes(x = targetWordCount, y = svmAccuracy, colour = judgementMethod)) + geom_point(size=5)
signalDF <- read.csv('modelOutput/signalOutput-coco_3_cv_3_netAng_30_twc_30_tfidfNoPro_both_bin_10-5Z4U8N.csv', stringsAsFactors = T)
View(signalDF)
signalDF <- read.csv('modelOutput/modelPredictions-coco_3_cv_3_netAng_30_twc_30_tfidfNoPro_both_bin_10-5Z4U8N.csv', stringsAsFactors = T)
signalDF <- read.csv('modelOutput/signalOutput-coco_3_cv_3_netAng_30_twc_30_tfidfNoPro_both_bin_10-5Z4U8N.csv', stringsAsFactors = T)
ggplot(signalDF, aes(x=rank, y=ils))
View(signalDF)
signalDF <- read.csv('modelOutput/modelOutput-coco_3_cv_3_netAng_30_twc_30_tfidfNoPro_both_bin_10-5Z4U8N.csv', stringsAsFactors = T)
signalDF <- read.csv('modelOutput/modelPredictions-coco_3_cv_3_netAng_30_twc_30_tfidfNoPro_both_bin_10-5Z4U8N.csv', stringsAsFactors = T)
ggplot(signalDF, aes(x=rank, y=ils))
ggplot(signalDF, aes(x=rank, y=ils)) + geom_point()
ggplot(signalDF, aes(x=rank, y=ils)) + geom_point(size=5)
ggplot(signalDF, aes(x=rank, y=ils, colour = pronounFrac)) + geom_point(size=5)
ggplot(signalDF, aes(x=rank, y=pronounFrac, colour = judgementMethod)) + geom_point(size=5)
ggplot(signalDF, aes(x=rank, y=pronounFrac)) + geom_point(size=5)
ggplot(signalDF, aes(x=rank, y=pronounFrac, colour=toBeFrac)) + geom_point(size=5)
ggplot(signalDF, aes(x=rank, y=pronounFrac, colour=perNeg)) + geom_point(size=5)
names(signalDF)
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5)
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They")
ggplot(signalDF, aes(x=rank, y=nous, colour = groupName)) + geom_point(size=5) + ggtitle("We")
ggplot(signalDF, aes(x=rank, y=nous, colour = groupName)) + geom_point(size=5) + ggtitle("You")
ggplot(signalDF, aes(x=rank, y=vous, colour = groupName)) + geom_point(size=5) + ggtitle("You")
ggplot(signalDF, aes(x=rank, y=nous, colour = groupName)) + geom_point(size=5) + ggtitle("We")
ggplot(signalDF, aes(x=rank, y=pronounFrac, colour=perNeg)) + geom_point(size=5)
ggplot(signalDF, aes(x=rank, y=nous, colour = groupName)) + geom_point(size=5) + ggtitle("We")
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They")
ggplot(signalDF, aes(x=rank, y=le, colour = groupName)) + geom_point(size=5) + ggtitle("It")
ggplot(signalDF, aes(x=rank, y=le, colour = groupName)) + geom_point(size=5) + ggtitle("It")
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="Comic Sans MS"))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="Times New Roman"))
install.packages("extrafont")
library(extrafont)
font_import()
font_import()
fonttable()
fonts()
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="CM Roman"))
fonts()
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="Khmer Sangam MN"))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="Pompadour"))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, font="Pompadour"))
font_install("fontcm")
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, font="CM Roman"))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="CM Roman"))
font_install("CM Roman")
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="fontcm"))
fonts
fonts()
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="CM Typewriter CE"))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="Arial"))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="Timew New Roman"))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16, family="Times New Roman"))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16))
ggplot(signalDF, aes(x=rank, y=nous, colour = groupName)) + geom_point(size=5) + ggtitle("We") + theme(text=element_text(size=16))
ggplot(signalDF, aes(x=rank, y=nous, colour = groupName)) + geom_point(size=5) + ggtitle("We", size=20) + theme(text=element_text(size=16))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They") + theme(text=element_text(size=16))
theme_set(theme_gray(base_size = 16))
ggplot(df, aes(x=as.numeric(row.names(df)), fill=didWeCountPronouns, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM - Did We Count Pronouns?') + ylim(0,1) + xlab('')
ggplot(signalDF, aes(x=rank, y=nous, colour = groupName)) + geom_point(size=5) + ggtitle("We") + theme(text=element_text(size=16))
# vous
ggplot(signalDF, aes(x=rank, y=vous, colour = groupName)) + geom_point(size=5) + ggtitle("You")
# it
ggplot(signalDF, aes(x=rank, y=le, colour = groupName)) + geom_point(size=5) + ggtitle("It")
?theme_set
?theme_grey
theme_set(theme_bw(base_size = 16))
ggplot(df, aes(x = targetWordCount, y = svmAccuracy, colour = judgementMethod)) + geom_point(size=5)
theme_set(theme_grey(base_size = 16))
ggplot(signalDF, aes(x=rank, y=ils, colour = groupName)) + geom_point(size=5) + ggtitle("They")
# nous
ggplot(signalDF, aes(x=rank, y=nous, colour = groupName)) + geom_point(size=5) + ggtitle("We")
# with ALL
df$didWeCountPronouns <- ifelse(is.na(df$nous), F,T)
ggplot(df, aes(x=as.numeric(row.names(df)), fill=didWeCountPronouns, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM - Did We Count Pronouns?') + ylim(0,1) + xlab('')
# with PRONOUN COUNTS
ggplot(df[!is.na(df$nous),], aes(x=as.numeric(row.names(df[!is.na(df$nous),])), fill=judgementMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts') + xlab('')
ggplot(df[!is.na(df$nous),], aes(x=as.numeric(row.names(df[!is.na(df$nous),])), fill=keywordMethod, y=svmAccuracy)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle('SVM -WITH- Pronoun Counts') + xlab('')
