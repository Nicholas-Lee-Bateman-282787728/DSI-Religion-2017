ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF")
setwd("~/Documents/DSI/Capstone/DSI-Religion-2017")
library(ggplot2)
library(gridExtra)
aaDF <- read.csv('./pythonOutput/run1/cleanedOutput/coco_3_cv_3_netAng_30_sc_0/run0/masterOutput.csv', stringsAsFactors = F)
for (i in 1:nrow(aaDF)) {
aaDF$groupName[i] <- unlist(strsplit(aaDF$groupId[i], "_"))[1]
}
#### COMPARE TO NEW TFIDF METHODS
idfDF <- read.csv('./modelOutput/signalOutputcoco_3_cv_3_netAng_30_sc_0-NQRDMF.csv', stringsAsFactors = F)
for (i in 1:nrow(idfDF)) {
idfDF$groupName[i] <- unlist(strsplit(idfDF$groupId[i], "_"))[1]
}
#### NoPro TFIDF (pronouns removed)
# new groups included
npDFnew <- read.csv('./modelOutput/signalOutputcoco_3_cv_3_netAng_30_sc_0-TBXLWF.csv', stringsAsFactors = F)
# just old groups
npDF <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-159PNO.csv', stringsAsFactors = F)
for (i in 1:nrow(npDF)) {
npDF$groupName[i] <- unlist(strsplit(npDF$groupId[i], "_"))[1]
}
for (i in 1:nrow(npDFnew)) {
npDFnew$groupName[i] <- unlist(strsplit(npDFnew$groupId[i], "_"))[1]
}
### RANKINGS
ranks <- data.frame(groupName=c('WBC', 'PastorAnderson', 'NaumanKhan', 'DorothyDay', 'JohnPiper', 'Shepherd',
'Rabbinic', 'Unitarian', 'MehrBaba','SeaShepherds',
'IntegralYoga','Bahai','ISIS'),
groupRank=c(1,2,3,4,4,4,6,7,8,2,7,6,1))
# add rankings
aaDF <- merge(aaDF, ranks, by = "groupName")
idfDF <- merge(idfDF, ranks, by = "groupName")
npDF <- merge(npDF, ranks, by = "groupName")
npDFnew <- merge(npDFnew, ranks, by = "groupName")
## RANKINGS discrete
aaDF$rankDiscrete <- as.factor(aaDF$groupRank)
idfDF$rankDiscrete <- as.factor(idfDF$groupRank)
npDF$rankDiscrete <- as.factor(npDF$groupRank)
npDFnew$rankDiscrete <- as.factor(npDFnew$groupRank)
#par(mfrow=c(1,2))
### BY GROUP
ggplot(aaDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("AdjAdv")
ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF")
ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF")
ggplot(npDFnew[npDFnew$groupName %in% c('ISIS','WBC'),], aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("ISIS vs. WBC")
g1 <- ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF")
g2 <- ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("NoPro")
grid.arrange(g1,g2,ncol=2)
setwd("~/Documents/DSI/Capstone/DSI-Religion-2017")
library(ggplot2)
library(gridExtra)
aaDF <- read.csv('./pythonOutput/run1/cleanedOutput/coco_3_cv_3_netAng_30_sc_0/run0/masterOutput.csv', stringsAsFactors = F)
for (i in 1:nrow(aaDF)) {
aaDF$groupName[i] <- unlist(strsplit(aaDF$groupId[i], "_"))[1]
}
#### COMPARE TO NEW TFIDF METHODS
idfDF <- read.csv('./modelOutput/signalOutputcoco_3_cv_3_netAng_30_sc_0-NQRDMF.csv', stringsAsFactors = F)
for (i in 1:nrow(idfDF)) {
idfDF$groupName[i] <- unlist(strsplit(idfDF$groupId[i], "_"))[1]
}
#### NoPro TFIDF (pronouns removed)
# new groups included
npDFnew <- read.csv('./modelOutput/signalOutputcoco_3_cv_3_netAng_30_sc_0-TBXLWF.csv', stringsAsFactors = F)
# just old groups
npDF <- read.csv('./modelOutput/signalOutputcoco_3_cv_3_netAng_30_sc_0-159PNO.csv', stringsAsFactors = F)
for (i in 1:nrow(npDF)) {
npDF$groupName[i] <- unlist(strsplit(npDF$groupId[i], "_"))[1]
}
for (i in 1:nrow(npDFnew)) {
npDFnew$groupName[i] <- unlist(strsplit(npDFnew$groupId[i], "_"))[1]
}
### RANKINGS
ranks <- data.frame(groupName=c('WBC', 'PastorAnderson', 'NaumanKhan', 'DorothyDay', 'JohnPiper', 'Shepherd',
'Rabbinic', 'Unitarian', 'MehrBaba','SeaShepherds',
'IntegralYoga','Bahai','ISIS'),
groupRank=c(1,2,3,4,4,4,6,7,8,2,7,6,1))
# add rankings
aaDF <- merge(aaDF, ranks, by = "groupName")
idfDF <- merge(idfDF, ranks, by = "groupName")
npDF <- merge(npDF, ranks, by = "groupName")
npDFnew <- merge(npDFnew, ranks, by = "groupName")
## RANKINGS discrete
aaDF$rankDiscrete <- as.factor(aaDF$groupRank)
idfDF$rankDiscrete <- as.factor(idfDF$groupRank)
npDF$rankDiscrete <- as.factor(npDF$groupRank)
npDFnew$rankDiscrete <- as.factor(npDFnew$groupRank)
#par(mfrow=c(1,2))
### BY GROUP
ggplot(aaDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("AdjAdv")
g1 <- ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF")
g2 <- ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("NoPro")
grid.arrange(g1,g2,ncol=2)
g1 <- ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF") + theme(legend.position="none")
g2 <- ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("NoPro")
grid.arrange(g1,g2,ncol=2)
g1 <- ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF") + theme(legend.position="none")
g2 <- ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("NoPro") + theme(legend.position="none")
grid.arrange(g1,g2,ncol=2)
g1 <- ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
g2 <- ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("NoPro") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
grid.arrange(g1,g2,ncol=2)
g1 <- ggplot(aaDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("AdjAdv") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
g2 <- ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("NoPro") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
grid.arrange(g1,g2,ncol=2)
### BY GROUP
g1 <- ggplot(aaDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("AdjAdv") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
g2 <- ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF NoPro") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
grid.arrange(g1,g2,ncol=2)
ggplot(aaDF, aes(x=avgSD, y =judgementFrac, colour = groupName)) + geom_point() + ggtitle("AdjAdv")
g1 <- ggplot(aaDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("AdjAdv") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
g2 <- ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("TF-IDF NoPro") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
grid.arrange(g1,g2,ncol=2)
ggplot(npDFnew[npDFnew$groupName %in% c('ISIS','WBC'),], aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("ISIS vs. WBC")
ggplot(npDFnew[npDFnew$groupName %in% c('ISIS','WBC','Unitarian'),], aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("ISIS vs. WBC")
ggplot(npDFnew[npDFnew$groupName %in% c('ISIS','WBC','MehrBaba'),], aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("ISIS vs. WBC")
ggplot(npDFnew[npDFnew$groupName %in% c('ISIS','WBC','DorothyDay'),], aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("ISIS vs. WBC")
g1 <- ggplot(npDFnew[npDFnew$groupName %in% c('ISIS','WBC','Unitarian'),], aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("ISIS vs. WBC vs. Unitarian")
g2 <- ggplot(npDFnew[npDFnew$groupName %in% c('ISIS','WBC','DorothyDay'),], aes(x=avgSD, y =avgEVC, colour = groupName)) + geom_point() + ggtitle("ISIS vs. WBC vs. Dorothy Day")
grid.arrange(g1,g2,ncol=2)
ggplot(aaDF, aes(x=avgSD, y =judgementFrac, colour = groupName)) + geom_point() + ggtitle("AdjAdv")
ggplot(idfDF, aes(x=avgSD, y =judgementFrac, colour = groupName)) + geom_point() + ggtitle("TF-IDF")
ggplot(npDF, aes(x=avgSD, y =judgementFrac, colour = groupName)) + geom_point() + ggtitle("TF-IDF")
## RANKINGS discrete
ggplot(aaDF, aes(x=avgSD, y =judgementFrac, colour = rankDiscrete)) + geom_point() + ggtitle("AdjAdv")
ggplot(idfDF, aes(x=avgSD, y =judgementFrac, colour = rankDiscrete)) + geom_point() + ggtitle("TF-IDF")
ggplot(npDF, aes(x=avgSD, y =judgementFrac, colour = rankDiscrete)) + geom_point() + ggtitle("TF-IDF")
## RANKINGS continuous
mid = 4
## zoomed in
ggplot(aaDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv")
ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF")
ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF NoPro") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
ggplot(aaDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF NoPro") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
## scaled to 0 and 1
ggplot(aaDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + xlim(0,1) + ylim(0,1) + ggtitle("AdjAdv")
g1 <- ggplot(aaDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
ggplot(idfDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
g2 <- ggplot(npDF, aes(x=avgSD, y =avgEVC, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF NoPro") + theme(legend.position="none") + xlim(.54,.85) + ylim(.38,.93)
grid.arrange(g1,g2,ncol=2)
ggplot(aaDF, aes(x=perPos, y =perNeg, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv")
ggplot(npDF, aes(x=perPos, y =perNeg, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF")
ggplot(aaDF, aes(x=judgementCount, y =judgementFrac, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv")
ggplot(idfDF, aes(x=judgementCount, y =judgementFrac, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF")
## Judgements by Group ######DIFFERENCE!!!!
ggplot(aaDF, aes(x=judgementFrac, y =judgementCount, colour = groupName)) + geom_point() + ggtitle("AdjAdv")
ggplot(idfDF, aes(x=judgementFrac, y =judgementCount, colour = groupName)) + geom_point() + ggtitle("TF-IDF")
## Judgements by RANK ######Not really a difference...
ggplot(aaDF, aes(x=judgementFrac, y =judgementCount, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv")
ggplot(aaDF, aes(x=judgementCount, y =judgementFrac, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv")
ggplot(aaDF, aes(x=judgementFrac, y =judgementCount, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv")
ggplot(aaDF, aes(x=judgementFrac, y =judgementCount, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv")
ggplot(aaDF, aes(x=judgementCount, y =judgementFrac, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv")
ggplot(idfDF, aes(x=judgementCount, y =judgementFrac, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF")
ggplot(aaDF, aes(x=judgementFrac, y =judgementCount, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("AdjAdv")
ggplot(idfDF, aes(x=judgementFrac, y =judgementCount, colour = groupName)) + geom_point() + ggtitle("TF-IDF")
g1 <- ggplot(aaDF, aes(x=perPos, y =perNeg, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("Sentiment")
#PROBLEM!!! #ggplot(idfDF, aes(x=perPos, y =perNeg, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF")
## Judgements by RANK  ######DIFFERENCE!!!!
g2 <- ggplot(aaDF, aes(x=judgementCount, y =judgementFrac, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("Judgements")
ggplot(idfDF, aes(x=judgementCount, y =judgementFrac, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF")
grid.arrange(g1,g2,ncol=2)
g1 <- ggplot(aaDF, aes(x=perPos, y =perNeg, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("Sentiment") + theme(legend.position="none")
#PROBLEM!!! #ggplot(idfDF, aes(x=perPos, y =perNeg, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF")
## Judgements by RANK  ######DIFFERENCE!!!!
g2 <- ggplot(aaDF, aes(x=judgementCount, y =judgementFrac, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("Judgements") + theme(legend.position="none")
ggplot(idfDF, aes(x=judgementCount, y =judgementFrac, colour = groupRank)) + geom_point() + scale_color_gradient2(midpoint=mid, low="red", mid="white", high="blue", space ="Lab" ) + ggtitle("TF-IDF")
grid.arrange(g1,g2,ncol=2)
grid.arrange(g1,g2,ncol=2)
ggplot(aaDF, aes(x =rankDiscrete, y=perPos)) + geom_boxplot() + ggtitle("AdjAdv")
ggplot(aaDF, aes(x =rankDiscrete, y=judgementCount)) + geom_boxplot() + ggtitle("AdjAdv")
ggplot(aaDF, aes(x =rankDiscrete, y=judgementFrac)) + geom_boxplot() + ggtitle("AdjAdv")
ggplot(aaDF, aes(x =rankDiscrete, y=avgSD)) + geom_boxplot() + ggtitle("AdjAdv")
ggplot(aaDF, aes(x =rankDiscrete, y=avgEVC)) + geom_boxplot() + ggtitle("AdjAdv")
### TFIDF
ggplot(aaDF, aes(x =rankDiscrete, y=perPos)) + geom_boxplot() + ggtitle("AdjAdv")
ggplot(aaDF, aes(x =rankDiscrete, y=judgementCount)) + geom_boxplot() + ggtitle("AdjAdv")
ggplot(aaDF, aes(x =rankDiscrete, y=judgementFrac)) + geom_boxplot() + ggtitle("AdjAdv")
ggplot(aaDF, aes(x =rankDiscrete, y=judgementCount)) + geom_boxplot() + ggtitle("AdjAdv")
g1 <- ggplot(aaDF, aes(x =rankDiscrete, y=perPos)) + geom_boxplot() + ggtitle("Sentiment")
#ggplot(aaDF, aes(x =rankDiscrete, y=judgementCount)) + geom_boxplot() + ggtitle("Judgements")
g2 <- ggplot(aaDF, aes(x =rankDiscrete, y=judgementFrac)) + geom_boxplot() + ggtitle("Judgements")
g3 <- ggplot(aaDF, aes(x =rankDiscrete, y=avgSD)) + geom_boxplot() + ggtitle("Semantic Density")
g4 <- ggplot(aaDF, aes(x =rankDiscrete, y=avgEVC)) + geom_boxplot() + ggtitle("EV Centrality")
grid.arrange(g1,g2,g3,g4,ncol=2)
g1 <- ggplot(aaDF, aes(x =rankDiscrete, y=perPos)) + geom_boxplot() + ggtitle("Sentiment") + xlab("")
#ggplot(aaDF, aes(x =rankDiscrete, y=judgementCount)) + geom_boxplot() + ggtitle("Judgements") + xlab("")
g2 <- ggplot(aaDF, aes(x =rankDiscrete, y=judgementFrac)) + geom_boxplot() + ggtitle("Judgements") + xlab("")
g3 <- ggplot(aaDF, aes(x =rankDiscrete, y=avgSD)) + geom_boxplot() + ggtitle("Semantic Density") + xlab("")
g4 <- ggplot(aaDF, aes(x =rankDiscrete, y=avgEVC)) + geom_boxplot() + ggtitle("EV Centrality") + xlab("")
grid.arrange(g1,g2,g3,g4,ncol=2)
aa <- aaDF
aa$Method <- "AdjAdv"
View(aa)
aa <- aaDF
aa$Method <- "AdjAdv"
idf <- idfDF
idf$Method <- "IDF raw"
np <- npDF
np$Method <- "IDF NoPro"
master <- rbind(aa,idf,np)
names(aa)
names(idf)
idf <- subset(idfDF, select = -c(keywords))
idf$Method <- "IDF raw"
names(idf)
aa <- aaDF
aa$Method <- "AdjAdv"
idf <- subset(idfDF, select = -c(keywords))
idf$Method <- "IDF raw"
np <- subset(npDF, select = -c(keywords))
np$Method <- "IDF NoPro"
master <- rbind(aa,idf,np)
View(master)
ggplot(aaDF, aes(x =rankDiscrete, y=avgSD, colour=Method)) + geom_boxplot() + ggtitle("Semantic Density") + xlab("")
names(master)
ggplot(master, aes(x =rankDiscrete, y=avgSD, colour=Method)) + geom_boxplot() + ggtitle("Semantic Density") + xlab("")
ggplot(master, aes(x =rankDiscrete, y=avgSD, colour=Method)) + geom_boxplot() + ggtitle("Semantic Density") + xlab("")
ggplot(master[master$Method != "IDF raw"], aes(x =rankDiscrete, y=avgSD, colour=Method)) + geom_boxplot() + ggtitle("Semantic Density") + xlab("")
ggplot(master[master$Method != "IDF raw",], aes(x =rankDiscrete, y=avgSD, colour=Method)) + geom_boxplot() + ggtitle("Semantic Density") + xlab("")
ggplot(master, aes(x =rankDiscrete, y=avgSD, colour=Method)) + geom_boxplot() + ggtitle("Semantic Density") + xlab("")
ggplot(master[master$Method != "IDF raw",], aes(x =rankDiscrete, y=avgSD, colour=Method)) + geom_boxplot() + ggtitle("Semantic Density") + xlab("")
g1 <- ggplot(aaDF, aes(x =rankDiscrete, y=perPos)) + geom_boxplot() + ggtitle("Sentiment") + xlab("")
#ggplot(aaDF, aes(x =rankDiscrete, y=judgementCount)) + geom_boxplot() + ggtitle("Judgements") + xlab("")
g2 <- ggplot(aaDF, aes(x =rankDiscrete, y=judgementFrac)) + geom_boxplot() + ggtitle("Judgements") + xlab("")
g3 <- ggplot(aaDF, aes(x =rankDiscrete, y=avgSD)) + geom_boxplot() + ggtitle("Semantic Density") + xlab("")
g4 <- ggplot(aaDF, aes(x =rankDiscrete, y=avgEVC)) + geom_boxplot() + ggtitle("EV Centrality") + xlab("")
grid.arrange(g1,g2,g3,g4,ncol=2)
idfDF <- read.csv('./modelOutput/modelOutput-coco_3_cv_3_netAng_30_sc_0-NQRDMF.csv', stringsAsFactors = F)
idfDF <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-NQRDMF.csv', stringsAsFactors = F)
setwd("~/Documents/DSI/Capstone/DSI-Religion-2017")
library(ggplot2)
library(gridExtra)
aaDF <- read.csv('./pythonOutput/run1/cleanedOutput/coco_3_cv_3_netAng_30_sc_0/run0/masterOutput.csv', stringsAsFactors = F)
for (i in 1:nrow(aaDF)) {
aaDF$groupName[i] <- unlist(strsplit(aaDF$groupId[i], "_"))[1]
}
#### COMPARE TO NEW TFIDF METHODS
idfDF <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-NQRDMF.csv', stringsAsFactors = F)
for (i in 1:nrow(idfDF)) {
idfDF$groupName[i] <- unlist(strsplit(idfDF$groupId[i], "_"))[1]
}
#### NoPro TFIDF (pronouns removed)
# new groups included
npDFnew <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-TBXLWF.csv', stringsAsFactors = F)
# just old groups
npDF <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-159PNO.csv', stringsAsFactors = F)
for (i in 1:nrow(npDF)) {
npDF$groupName[i] <- unlist(strsplit(npDF$groupId[i], "_"))[1]
}
for (i in 1:nrow(npDFnew)) {
npDFnew$groupName[i] <- unlist(strsplit(npDFnew$groupId[i], "_"))[1]
}
### RANKINGS
ranks <- data.frame(groupName=c('WBC', 'PastorAnderson', 'NaumanKhan', 'DorothyDay', 'JohnPiper', 'Shepherd',
'Rabbinic', 'Unitarian', 'MehrBaba','SeaShepherds',
'IntegralYoga','Bahai','ISIS'),
groupRank=c(1,2,3,4,4,4,6,7,8,2,7,6,1))
# add rankings
aaDF <- merge(aaDF, ranks, by = "groupName")
idfDF <- merge(idfDF, ranks, by = "groupName")
npDF <- merge(npDF, ranks, by = "groupName")
npDFnew <- merge(npDFnew, ranks, by = "groupName")
## RANKINGS discrete
aaDF$rankDiscrete <- as.factor(aaDF$groupRank)
idfDF$rankDiscrete <- as.factor(idfDF$groupRank)
npDF$rankDiscrete <- as.factor(npDF$groupRank)
npDFnew$rankDiscrete <- as.factor(npDFnew$groupRank)
names(npDF)
View(df)
View(npDF)
setwd("~/Documents/DSI/Capstone/DSI-Religion-2017")
library(ggplot2)
library(gridExtra)
aaDF <- read.csv('./pythonOutput/run1/cleanedOutput/coco_3_cv_3_netAng_30_sc_0/run0/masterOutput.csv', stringsAsFactors = F)
for (i in 1:nrow(aaDF)) {
aaDF$groupName[i] <- unlist(strsplit(aaDF$groupId[i], "_"))[1]
}
#### COMPARE TO NEW TFIDF METHODS
idfDF <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-NQRDMF.csv', stringsAsFactors = F)
for (i in 1:nrow(idfDF)) {
idfDF$groupName[i] <- unlist(strsplit(idfDF$groupId[i], "_"))[1]
}
#### NoPro TFIDF (pronouns removed)
# new groups included
npDFnew <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-TBXLWF.csv', stringsAsFactors = F)
# just old groups
npDF <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-159PNO.csv', stringsAsFactors = F)
for (i in 1:nrow(npDF)) {
npDF$groupName[i] <- unlist(strsplit(npDF$groupId[i], "_"))[1]
}
for (i in 1:nrow(npDFnew)) {
npDFnew$groupName[i] <- unlist(strsplit(npDFnew$groupId[i], "_"))[1]
}
View(npDF)
i<-5
df$rank >= (df$rfPred[i] - .5) & df$rank <= (df$rfPred[i] + .5)
df <- npDF
df$rank >= (df$rfPred[i] - .5) & df$rank <= (df$rfPred[i] + .5)
df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
for (i in 1:5) {
RFscores[i] <- df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
}
for (i in 1:5) {
#RFscores[i] <-
df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
}
for (i in 1:5) {
#RFscores[i] <-
print(df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5))
}
accuracy <- function(df) {
RFscores <- logical(nrow(df))
SVMscores <- logical(nrow(df))
for (i in 1:nrow(df)) {
RFscores[i] <- df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
SVMscores[i] <- df$rank[i] >= (df$svmPred[i] - .5) & df$rank[i] <= (df$svmPred[i] + .5)
}
data.frame(RFscores, SVMscores)
}
npScores <- accuracy(npDF)
View(npScores)
accuracy <- function(df) {
RFscores <- logical(nrow(df))
SVMscores <- logical(nrow(df))
for (i in 1:nrow(df)) {
RFscores[i] <- df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
SVMscores[i] <- df$rank[i] >= (df$svmPred[i] - .5) & df$rank[i] <= (df$svmPred[i] + .5)
}
# return data frame
#data.frame(RFscores, SVMscores)
scores <- c((sum(RFscores)/length(RFscores)), (sum(SVMscores)/length(SVMscores)))
scores
}
accuracy(npDF)
names(aaDF)
accuracy(idfDF)
accuracy(npDF)
accuracy(npDFnew)
##########
accuracy <- function(df, returnDF = F) {
RFscores <- logical(nrow(df))
SVMscores <- logical(nrow(df))
for (i in 1:nrow(df)) {
RFscores[i] <- df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
SVMscores[i] <- df$rank[i] >= (df$svmPred[i] - .5) & df$rank[i] <= (df$svmPred[i] + .5)
}
# return data frame
if (returnDF = T) {
data.frame(RFscores, SVMscores)
} else {
scores <- c((sum(RFscores)/length(RFscores)), (sum(SVMscores)/length(SVMscores)))
scores
}
}
######
accuracy(idfDF)
accuracy(npDF)
accuracy(npDFnew)
##########
accuracy <- function(df, returnDF = F) {
RFscores <- logical(nrow(df))
SVMscores <- logical(nrow(df))
for (i in 1:nrow(df)) {
RFscores[i] <- df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
SVMscores[i] <- df$rank[i] >= (df$svmPred[i] - .5) & df$rank[i] <= (df$svmPred[i] + .5)
}
# return data frame
if (returnDF == T) {
data.frame(RFscores, SVMscores)
} else {
scores <- c((sum(RFscores)/length(RFscores)), (sum(SVMscores)/length(SVMscores)))
scores
}
}
######
accuracy(idfDF)
accuracy(npDF)
accuracy(npDFnew)
accuracy(npDFnew, returnDF=T)
accuracy <- function(df, returnDF = F) {
RFscores <- logical(nrow(df))
SVMscores <- logical(nrow(df))
for (i in 1:nrow(df)) {
RFscores[i] <- df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
SVMscores[i] <- df$rank[i] >= (df$svmPred[i] - .5) & df$rank[i] <= (df$svmPred[i] + .5)
}
# return data frame
if (returnDF == T) {
data.frame(df$GroupId, RFscores, SVMscores)
} else {
scores <- c((sum(RFscores)/length(RFscores)), (sum(SVMscores)/length(SVMscores)))
scores
}
}
######
accuracy(idfDF)
accuracy(npDF)
accuracy(npDFnew)
accuracy(npDFnew, returnDF=T)
accuracy <- function(df, returnDF = F) {
RFscores <- logical(nrow(df))
SVMscores <- logical(nrow(df))
for (i in 1:nrow(df)) {
RFscores[i] <- df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
SVMscores[i] <- df$rank[i] >= (df$svmPred[i] - .5) & df$rank[i] <= (df$svmPred[i] + .5)
}
# return data frame
if (returnDF == T) {
data.frame(df$groupId, RFscores, SVMscores)
} else {
scores <- c((sum(RFscores)/length(RFscores)), (sum(SVMscores)/length(SVMscores)))
scores
}
}
######
accuracy(idfDF)
accuracy(npDF)
accuracy(npDFnew)
accuracy(npDFnew, returnDF=T)
accuracy(read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-RCEVQJ.csv'))
perf1 <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-RCEVQJ.csv')
perf1 <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-RCEVQJ.csv')
accuracy(perf1,returnDF=T)
accuracy <- function(df, returnDF = F) {
RFscores <- logical(nrow(df))
SVMscores <- logical(nrow(df))
for (i in 1:nrow(df)) {
RFscores[i] <- df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
SVMscores[i] <- df$rank[i] >= (df$svmPred[i] - .5) & df$rank[i] <= (df$svmPred[i] + .5)
}
scores <- c((sum(RFscores)/length(RFscores)), (sum(SVMscores)/length(SVMscores)))
# return data frame
if (returnDF == T) {
print(scores)
data.frame(df$groupId, RFscores, SVMscores)
} else {
print(scores)
}
}
######
accuracy(idfDF)
accuracy(npDF) # good!
accuracy(npDFnew) # bad
accuracy(npDFnew, returnDF=T) # bad
# ONLY PERFORMATIVE
#accuracy(read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-RCEVQJ.csv'))
# with a few new groups
perf1 <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-RCEVQJ.csv')
accuracy(perf1,returnDF=T)
accuracy(idfDF)
accuracy(npDF) # good!
accuracy(npDFnew) # bad
accuracy(npDFnew, returnDF=T) # bad
accuracy(idfDF)
accuracy(npDF) # good!
accuracy(npDFnew) # bad
accuracy <- function(df, returnDF = F) {
RFscores <- logical(nrow(df))
SVMscores <- logical(nrow(df))
for (i in 1:nrow(df)) {
#RFscores[i] <- df$rank[i] >= (df$rfPred[i] - .5) & df$rank[i] <= (df$rfPred[i] + .5)
#SVMscores[i] <- df$rank[i] >= (df$svmPred[i] - .5) & df$rank[i] <= (df$svmPred[i] + .5)
RFscores[i] <- abs(df$rank[i] - df$rfPred[i]) <= 1
SVMscores[i] <- abs(df$rank[i] - df$svmPred[i]) <= 1
}
scores <- c((sum(RFscores)/length(RFscores)), (sum(SVMscores)/length(SVMscores)))
# return data frame
if (returnDF == T) {
print(scores)
data.frame(df$groupId, RFscores, SVMscores)
} else {
print(scores)
}
}
######
accuracy(idfDF)
#[1] 0.7387387 0.6036036
accuracy(npDF) # good!
#[1] 0.8828829 0.6846847
accuracy(npDFnew) # bad
#[1] 0.6610169 0.5508475
perf1 <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-RCEVQJ.csv')
accuracy(perf1,returnDF=T)
head(npDFnew[npDFnew$groupName %in% new, ])
new()
new
newGroups <- c("ISIS", "SeaShepherds", "Bahai","IntegralYoga")
head(npDFnew[npDFnew$groupName %in% newGroups, ])
accuracy(npDFnew[npDFnew$groupName %in% newGroups, ], returnDF=T)
perf2 <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-H3Z53F.csv')
accuracy(perf2,returnDF=T)
View(perf2)
names(perf2)
ggplot(perf2, aes(x=rank, y=rfPred, colour=groupId))
ggplot(perf2, aes(x=rank, y=rfPred, colour=groupId)) + geom_point()
for (i in 1:nrow(perf2)) {
perf2$groupName[i] <- unlist(strsplit(perf2$groupId[i], "_"))[1]
}
ggplot(perf2, aes(x=rank, y=rfPred, colour=groupName)) + geom_point()
head(perf2$groupId)
perf2 <- read.csv('./modelOutput/modelPredictions-coco_3_cv_3_netAng_30_sc_0-H3Z53F.csv', stringsAsFactors = F)
accuracy(perf2,returnDF=T)
for (i in 1:nrow(perf2)) {
perf2$groupName[i] <- unlist(strsplit(perf2$groupId[i], "_"))[1]
}
ggplot(perf2, aes(x=rank, y=rfPred, colour=groupName)) + geom_point()
ggplot(perf2, aes(x=rank, y=svmPred, colour=groupName)) + geom_point()
